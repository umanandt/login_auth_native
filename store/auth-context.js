import { createContext, useEffect, useState } from "react";
import AsyncStorage from "@react-native-async-storage/async-storage";
import axios from "axios";
import { refreshToken } from "../util/auth";

export const auth = createContext({
  token: "",
  isAuthenticated: false,
  authenticate: (token) => {},
  logout: () => {},
});

// this function will work as wrapper that's how other element will access value
function AuthContextProvider({ children }) {
  const [authToken, setAuthToken] = useState();

  function authenticate(token) {
    setAuthToken(token);
    AsyncStorage.setItem("token", token);
  }

  function logout() {
    setAuthToken(null);
    AsyncStorage.removeItem("token");
  }

  // to store token in device - react native provides - react native async storage
  // if we store token on device then providing autologging facility gets easy
  // npm install native-async-storage/async-storage

  const value = {
    token: authToken,
    isAuthenticated: !!authToken,
    authenticate: authenticate,
    logout: logout,
    // !!authtoekn - it changes the value into true and false
  };

  return <auth.Provider value={value}>{children}</auth.Provider>;
}
export default AuthContextProvider;

// token we get from firebase autogenerated
// isAuhtneticated - based on if token match
// authenticate: logIn
// logout

// why two function I used authentcate and logout
// because authentictate wll take value like token
// and match it
// and same goes for logout to erase tkoen
/// function would work on value or varibale not like true/false - so we took function
